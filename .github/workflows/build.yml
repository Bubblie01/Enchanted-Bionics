# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: ''temurin'
        java-version: 17

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
            ~/.gradle/caches
            ~/.gradle/loom-cache
            ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build --stacktrace

    - name: Extract current branch name
      shell: bash
      # bash pattern expansion to grab branch name without slashes
      run: ref="${GITHUB_REF#refs/heads/}" && echo "::set-output name=branch::${ref////-}"
      id: ref
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: sodium-artifacts-${{ steps.ref.outputs.branch }}
        # Filter built files to disregard -sources and -dev, and leave only the minecraft-compatible jars.
        path: build/libs/*[0-9].jar
